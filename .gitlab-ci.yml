variables:
  TYPE: "app"
  NAME: "helloworld" 
  SERVICE: ${TYPE}-${NAME}
  MODULE: "helm"

.docker:
  image: wedneyyuri/awscli-dind
  services:
      - docker:18.09-dind
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin 
  tags:
    - docker
    - gitlab-org-docker


.template_helm: &helm
  image: 
    name: alpine/helm:3.2.1
    entrypoint: [""]
  before_script:
    - apk add curl  
  tags:
    - docker
    - gitlab-org-docker

.template_terraform: &terraform
  image:
    name: hashicorp/terraform:0.12.31
    entrypoint: [""]
  before_script:
    - export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=us-east-1
  tags:
    - docker
    - gitlab-org-docker

stages:
  - build
  - package
  - deploy
  - rollback
  - plan
  - apply

build:
  extends: .docker
  stage: build
  script:
    - docker build -t $CI_REGISTRY_USER/${SERVICE}:${CI_PIPELINE_ID} -f ${CI_PROJECT_DIR}/parte1/docker/Dockerfile .
    - docker push $CI_REGISTRY_USER/${SERVICE}:${CI_PIPELINE_ID}

package:
  <<: *helm
  stage: package
  script:
    - helm package ${CI_PROJECT_DIR}/parte1/${MODULE}/${SERVICE} --version $CI_COMMIT_TAG
  only:
    - tags
  tags:
    - docker
  artifacts:
    paths:
      - ${SERVICE}-$CI_COMMIT_TAG.tgz
    expire_in: 4 week   

deploy:terraform:helm:
    <<: *terraform 
    stage: deploy
    variables:
      AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
      AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
    script:
      - cd parte1/${MODULE}/terraform && terraform init && terraform apply -var-file="stg.tfvars" --auto-approve
    dependencies:
        - package
    only:
      - tags    

deploy:terraform:plan:
  <<: *terraform
  stage: plan
  variables:
    ENVIRONMENT: "prod"
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
  before_script:
    - export TF_VAR_image=$CI_COMMIT_TAG
    - export TF_VAR_image_tag=$CI_REGISTRY_USER/${SERVICE}
  script: 
    - terraform plan
  only:
    - tags
  when: manual
  
deploy:terraform:infra:apply:
  <<: *terraform
  stage: apply
  variables:
    ENVIRONMENT: "prod"
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
  script:
    - cd $CI_PROJECT_DIR/parte2/infra/terraform/environments/${ENVIRONMENT}
    - terraform init    
    - terraform apply -auto-approve -target=module.network -target=module.cluster
  only:
    - tags
  when: manual  
 
deploy:terraform:service:apply:
  <<: *terraform
  stage: apply
  variables:
    ENVIRONMENT: "prod"
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
  before_script:
    - export TF_VAR_image=$CI_REGISTRY_USER/${SERVICE}
    - export TF_VAR_image_tag=$CI_COMMIT_TAG
  script:
    - cd $CI_PROJECT_DIR/parte2/infra/terraform/environments/${ENVIRONMENT}
    - terraform init    
    - terraform apply -auto-approve -target=module.app-helloworld
  only:
    - tags
    - master